---
kind: pipeline
type: kubernetes
name: Test

platform:
  os: linux
  arch: arm

steps:
  - name: rego:test
    image: cromrots/opa:0.53
    commands:
      - /opa test -v internal/policy/rego/
      - /opa test -v internal/policy/testdata/

  - name: rego:build
    image: cromrots/opa:0.53
    commands:
      - |
        /opa build \
          --target wasm \
          --entrypoint authz/auth/allow \
          --entrypoint authz/character/allow \
          --entrypoint authz/character_option/allow \
          --entrypoint authz/pages/allow \
          --entrypoint authz/user/allow \
          --entrypoint authz \
          --ignore \*_test.rego \
          --output bundle.tar.gz \
          internal/policy/rego

  - name: golang:test
    image: golang:1.20
    commands:
      # 'go test -race ...' not supported on ARM
      - go test -parallel=2 -v -coverprofile cover.out -count=1 ./internal/...

  - name: golang:coverage:report
    image: golang:1.20
    commands:
      - go tool cover -func cover.out

  - name: golang:build
    image: golang:1.20
    environment:
      CGO_ENABLED: 0
      GO111MODULE: on
      GOFLAGS: -mod=vendor
    commands:
      - |
        go build \
          -o dndmachine \
          -ldflags "\
            -X 'github.com/SebastiaanPasterkamp/dndmachine/internal/build.Version=unstable' \
            -X 'github.com/SebastiaanPasterkamp/dndmachine/internal/build.Commit=${DRONE_COMMIT}' \
            -X 'github.com/SebastiaanPasterkamp/dndmachine/internal/build.Branch=${DRONE_BRANCH}' \
            -X 'github.com/SebastiaanPasterkamp/dndmachine/internal/build.Timestamp=$(date -Iseconds)' \
          " \
          cmd/dndmachine/main.go
      - cp "$(go env GOROOT)/misc/wasm/wasm_exec.js" ui/src/context
      - |
        GOOS=js \
        GOARCH=wasm \
        go build \
          -o dndmachine.wasm \
          cmd/wasm/main.go

  - name: react:test
    image: node:17.9-stretch
    commands:
      - tar -xzvf bundle.tar.gz --directory=ui/public /policy.wasm
      - cd ui
      - npm install
      - npm test -- --all --watchAll=false --coverage

  - name: react:build
    image: node:17.9-stretch
    commands:
      - cd ui
      - npm install
      - npm run build

---
kind: pipeline
type: kubernetes
name: Image Staging

depends_on:
  - Test

platform:
  os: linux
  arch: arm

steps:
  - name: docker:staging
    image: docker-registry.pikube.dev:31443/drone-genuinetools-img
    settings:
      build_args: GIT_BRANCH=${DRONE_BRANCH},GIT_COMMIT=${DRONE_COMMIT},GIT_TAG=unstable
      repo: cromrots/dndmachine
      tags: unstable
      cache_from: cromrots/dndmachine:cache
      cache_to: cromrots/dndmachine:cache
      platform: linux/amd64,linux/arm64,linux/arm/v7
      password:
        from_secret: docker_pwd
      username:
        from_secret: docker_user

---
kind: pipeline
type: kubernetes
name: Image Production

trigger:
  event:
    - tag

depends_on:
  - Image Staging

platform:
  os: linux
  arch: arm

steps:
  - name: docker:production
    image: docker-registry.pikube.dev:31443/drone-genuinetools-img
    settings:
      build_args: GIT_BRANCH=${DRONE_BRANCH},GIT_COMMIT=${DRONE_COMMIT},GIT_TAG=${DRONE_TAG}
      repo: cromrots/dndmachine
      auto_tag: true
      cache_from: cromrots/dndmachine:cache
      cache_to: cromrots/dndmachine:cache
      platform: linux/amd64,linux/arm64,linux/arm/v7
      password:
        from_secret: docker_pwd
      username:
        from_secret: docker_user

---
kind: pipeline
type: kubernetes
name: Notify Status

clone:
  disable: true

trigger:
  status:
    - success
    - failure

depends_on:
  - Image Staging
  - Image Production

platform:
  os: linux
  arch: arm

steps:
  - name: discord:notification
    image: appleboy/drone-discord:1.2.6
    settings:
      webhook_id:
        from_secret: discord_id
      webhook_token:
        from_secret: discord_token
      username: drone.io
      color: auto
      message: >
        <:dndmachine:855198423245389844> **{{repo.name}}**

        {{#success build.status}}
        :white_check_mark: {{build.event}} build {{build.number}} succeeded. Good job.
        {{else}}
        :warning: {{build.event}} build {{build.number}} failed. Fix me please.
        {{/success}}

        {{build.link}}

        **Branch:** {{commit.branch}} {{commit.tag}}

        **Message:** {{commit.message}}
---
kind: signature
hmac: 08e4e6849adfa43614fe84f8aaaea651d59ab1e0601ed0ca721a70c03d16e29a

...
